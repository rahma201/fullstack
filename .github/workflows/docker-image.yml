name: Fullstack CI/CD

on:
  push:
    branches:
      - main

env:
  BACK_IMAGE: rahmashelbayeh/moto-back
  FRONT_IMAGE: rahmashelbayeh/moto-front
  TAG: ${{ github.run_number }}-${{ github.sha }}

jobs:

  # 1️⃣ Database Stage
  db_stage:
    name: Start MySQL Database
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Start MySQL container
        run: |
          docker run -d \
            --name moto-db \
            -e MYSQL_ROOT_PASSWORD=rootpassword \
            -e MYSQL_DATABASE=MotoRideDB \
            -p 3306:3306 \
            -v ${{ github.workspace }}/db/init.sql:/docker-entrypoint-initdb.d/init.sql \
            mysql:8.0

          echo "Waiting for MySQL to be ready..."
          until docker exec moto-db mysqladmin ping -uroot -prootpassword --silent; do
            echo "Waiting for MySQL..."
            sleep 5
          done
          echo "MySQL is ready."

  # 2️⃣ Build Frontend
  front_stage:
    name: Build & Push Frontend
    runs-on: ubuntu-latest
    needs: db_stage
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Frontend Image
        uses: docker/build-push-action@v5
        with:
          context: ./front
          file: ./front/Dockerfile
          push: true
          tags: ${{ env.FRONT_IMAGE }}:${{ env.TAG }}

  # 3️⃣ Build Backend
  back_stage:
    name: Build & Push Backend
    runs-on: ubuntu-latest
    needs: front_stage
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Backend Image
        uses: docker/build-push-action@v5
        with:
          context: ./Back
          file: ./Back/Dockerfile
          push: true
          tags: ${{ env.BACK_IMAGE }}:${{ env.TAG }}

  # 4️⃣ Deploy to Server
  deploy_stage:
    name: Deploy to Server
    runs-on: ubuntu-latest
    needs: back_stage
    steps:
      - name: SSH & Deploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            echo "Creating docker network if not exists..."
            docker network inspect moto-net >/dev/null 2>&1 || docker network create moto-net

            echo "Stopping old containers..."
            docker rm -f moto-db moto-back moto-front || true

            echo "Starting MySQL container..."
            docker run -d --restart unless-stopped \
              --network moto-net \
              --name moto-db \
              -e MYSQL_ROOT_PASSWORD=rootpassword \
              -e MYSQL_DATABASE=MotoRideDB \
              -p 3306:3306 \
              mysql:8.0

            echo "Pulling latest images..."
            docker pull ${{ env.BACK_IMAGE }}:${{ env.TAG }}
            docker pull ${{ env.FRONT_IMAGE }}:${{ env.TAG }}

            echo "Starting Backend on port 8080..."
            docker run -d --restart unless-stopped \
              --network moto-net \
              --name moto-back \
              -p 8080:8080 \
              -e ASPNETCORE_URLS=http://0.0.0.0:8080 \
              -e ConnectionStrings__DefaultConnection="Server=moto-db;Port=3306;Database=MotoRideDB;User=root;Password=rootpassword;" \
              ${{ env.BACK_IMAGE }}:${{ env.TAG }}

            echo "Starting Frontend on port 80..."
            docker run -d --restart unless-stopped \
              --network moto-net \
              --name moto-front \
              -p 80:80 \
              ${{ env.FRONT_IMAGE }}:${{ env.TAG }}
